service: rds-aurora-serverless
provider:
  name: aws
  runtime: java11
  region: eu-central-1
  versionFunctions: false
  memorySize: 512
  timeout: 25
  logRetentionInDays: 1
  role: LambdaAPITrustRole
  environment:
    STAGE: ${self:provider.stage}
    DB_CLUSTER: !Join [":", ["arn:aws:rds", !Ref "AWS::Region", !Ref "AWS::AccountId", "cluster", !Ref RDSCluster]]
    DB_SECRET: !Join [":", ["arn:aws:secretsmanager", !Ref "AWS::Region", !Ref "AWS::AccountId", "secret", "/rds-aurora-serverless-dev/rds-credentials-Oq1JdN"]]
    DB_HOST: !GetAtt RDSCluster.Endpoint.Address
    DB_PORT: !GetAtt RDSCluster.Endpoint.Port
    DB_NAME: "${self:custom.rds.name}"
    DB_USER: "${self:custom.rds.username}"
    DB_PASSWORD: "${self:custom.rds.password}"
    DB_CONNECTION: "DATA"
  tags:
    SERVICE: ${self:service}

plugins:
  - serverless-vpc-plugin

custom:
  rds:
    name: "rdstest"
    username: "rdstest"
    password: "44ba78ab744943cba9e2ffefd7f0aef0"
  vpcConfig:
    cidrBlock: '10.0.0.0/16'
    createDbSubnet: true
    createNatInstance: false
    createBastionHost: false
    createParameters: false
    services:
      - kms
      - rds
      - rds-data
    subnetGroups:
      - rds
    exportOutputs: false

package:
  artifact: "build/libs/rds-serverless-all.jar"

functions: ${file(infra/Lambda.yml)}
resources:
  - ${file(infra/IAM.yml)}
  - ${file(infra/RDS.yml)}
